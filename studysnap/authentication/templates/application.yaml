apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authentication.fullname" . }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ include "authentication.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "authentication.fullname" . }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 30
  template:
    metadata:
      labels:
        app: {{ include "authentication.fullname" . }}
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      containers:
        - name: {{ include "authentication.fullname" . }}
          image: "{{ .Values.image.name }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
          env:
            - name: PORT
              value: "{{ .Values.image.port }}"
            - name: MAX_REQUESTS
              value: "{{ .Values.image.env.maxRequests | default "250" }}"
            - name: BCRYPT_SALT_ROUNDS
              value: "{{ .Values.image.env.bcryptSaltRounds | default "12" }}"
            - name: DB_DIALECT
              value: "{{ .Values.image.env.dbDialect | default "postgres" }}"
            - name: DB_HOST
              value: "{{ include "postgresql.fullname" . }}"
            - name: DB_PORT
              value: "{{ .Values.image.env.dbPort | default "5432" }}"
            - name: DB_USER_DATABASE
              value: "{{ .Values.image.env.dbUserDatabase | default "studysnap_userdb" }}"
            - name: DB_RETRY_ATTEMPTS
              value: "{{ .Values.image.env.dbRetryAttempts | default "2" }}"
            - name: JWT_ACCESS_TOKEN_EXPIRE_TIME
              value: "{{ .Values.image.env.jwtAccessExpireTime | default "10m" }}"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: DB_PASS
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: JWT_SECRET
          ports:
            - containerPort: {{ .Values.image.port }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "authentication.fullname" . }}-service
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.service.type | default "NodePort" }}
  selector:
    app: {{ include "authentication.fullname" . }}
  ports:
    - name: http
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.image.port }}