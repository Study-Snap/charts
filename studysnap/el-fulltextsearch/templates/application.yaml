apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "el-fulltextsearch.fullname" . }}-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "el-fulltextsearch.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "el-fulltextsearch.fullname" . }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 45
  template:
    metadata:
      labels:
        app: {{ include "el-fulltextsearch.fullname" . }}
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      volumes:
          - name: elasticsearch-template-script
            configMap:
              name: elasticsearch-template-script-raw
              defaultMode: 0755
          - name: pre-install
            emptyDir: {}
          - name: {{ include "el-fulltextsearch.fullname" . }}-lscm-lsv
            configMap:
              name: "{{ include "el-fulltextsearch.fullname" . }}-lscm-ls"
          - name: {{ include "el-fulltextsearch.fullname" . }}-lscm-plv
            configMap:
              name: "{{ include "el-fulltextsearch.fullname" . }}-lscm-pl"
          - name: "{{ include "el-fulltextsearch.fullname" . }}-lspassv"
            secret:
              secretName: "{{ .Values.secretName }}"
              items:
                - key: postgresql-password
                  path: "{{ .Values.logstash.secretGroup }}"
      initContainers:
        - name: es-config-sidecar
          image: bash:latest
          imagePullPolicy: Always
          env:
            - name: ES_HOST
              value: "{{ include "elasticsearch.fullname" . }}"
            - name: ES_PORT
              value: "{{ .Values.es.port }}"
          command: ["bash"]
          args: ["-c", "/util/template.sh"]
          volumeMounts:
            - name: elasticsearch-template-script
              mountPath: /util
            - name: pre-install
              mountPath: /pre-install
      containers:
        - name: ss-logstash
          image: "{{ .Values.logstash.image.name }}:{{ .Values.logstash.image.tag }}"
          imagePullPolicy: {{ .Values.logstash.image.pullPolicy | default "Always" }}
          env:
            - name: DB_HOST
              value: "{{ include "ssdb.fullname" . }}"
            - name: DB_PORT
              value: "{{ .Values.database.port }}"
            - name: DB_NAME
              value: "{{ .Values.database.name }}"
            - name: ES_HOST
              value: "{{ include "elasticsearch.fullname" . }}"
            - name: ES_PORT
              value: "{{ .Values.es.port }}"
            - name: LS_HOST
              value: "{{ .Values.logstash.host }}"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: postgresql-studysnap-username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: postgresql-password
          volumeMounts:
            - name: {{ include "el-fulltextsearch.fullname" . }}-lscm-lsv
              mountPath: /usr/share/logstash/config/
            - name: {{ include "el-fulltextsearch.fullname" . }}-lscm-plv
              mountPath: /usr/share/logstash/pipeline/notes.conf
              subPath: notes.conf
            - name: "{{ include "el-fulltextsearch.fullname" . }}-lspassv"
              mountPath: "{{ .Values.logstash.secretPath }}"
              readOnly: true
          resources: {{- toYaml .Values.logstash.resources | nindent 12 }}